#!/bin/env python2

import argparse
import os
import sys
import yaml
from sqlalchemy import create_engine

try:
    # Use the system package first
    from usdanutrient import importservice
except ImportError:
    # Use the local package, if necessary
    sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
    from usdanutrient import importservice

if __name__ == '__main__':
    arg_parser = argparse.ArgumentParser(description='Interact with the USDA Nutrient Database')
    arg_parser.add_argument('command', help='Command to invoke', nargs=1, choices=['import'])
    arg_parser.add_argument('--release', '-r', dest='release', help='Release version of the USDA Nutrient Database', choices=['28'], default='28')
    args = arg_parser.parse_args()

    config_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), "../conf/usdanutrient.yml")
    with open(config_path) as f:
        config = yaml.safe_load(f)
        engine = create_engine(config['database']['uri'])

        if args.command[0] == 'import':
            data_dir = os.path.join(os.path.dirname(os.path.realpath(__file__)), "../data/release" + args.release)
            importservice.db_import(engine, data_dir)

            custom_data_dir = os.path.join(os.path.dirname(os.path.realpath(__file__)), "../data/custom")
            importservice.db_import_custom(engine, custom_data_dir)
